#pragma once

enum class EHandsRepresentationMode { HANDS_SEGMENTATION, SEETHRU, ALTERNATIVE_SEGMENTATION};
enum class EInitErrorCode { SUCCESS, FAILURE, NO_CONNECTION, INVALID_SERVER_RESPONSE, ALREADY_CONNECTED};
enum class EShutdownErrorCode { SUCCESS, FAILURE, NO_CONNECTION, INVALID_SERVER_RESPONSE };
enum class ESetKeyboardVisibilityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE};
enum class ESetHandsVisibilityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsRepresentationModeErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsColorErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsSegmentationThresholdErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetHandsOpacityErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESendIPMessageErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE };
enum class ESetAlternativeHandTintOffsetErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_INPUT, INVALID_SERVER_RESPONSE, FAILURE };
enum class EGetKeyboardStatusErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class EGetHandsStatusErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class ESetSkinErrorCode { SUCCESS, INIT_REQUIRED, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };
enum class ENotifyRuntimeErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, FAILURE };
enum class EGetSupportedKeyboardsErrorCode { SUCCESS, INIT_REQUIRED, NO_CONNECTION, INVALID_SERVER_RESPONSE, INVALID_INPUT, FAILURE };

enum class ENotification { NONE, SETUP_ABORT, SETUP_DONE};
enum class EIPMessages { TRIGGER_UPDATE_HAND_MODEL, TRIGGER_RESET_HAND_MODEL };